import os
from flask import Flask, render_template, request, Blueprint
import datetime
import glob
import shutil

app=Flask(__name__)

# Configure logging
def logit(logdata):
    timestr = filename = datetime.datetime.now().strftime('%A_%b-%d-%Y')
    with open("testlog2.txt", "a") as log_file:
        log_file.write(f"{timestr}: {logdata} <br/>")
    print("testlog2.txt entry:", logdata)

logit("TEST: 12345 in testlog2.txt\n")

@app.route('/readlog')
def readlog():
    logdata = []
    with open("testlog2.txt", "r") as log_file:
        logdata = log_file.readlines()
    return render_template('read_log.html', log_content=logdata)

# Read functions from app.py file into memory


def read_functions():
    logit.basicConfig(level=logit.INFO)  # Configuring logging
    logit.info("Reading file 'html_py.txt'...")
    with open('html_py.txt', 'r') as file:
        code = file.read()
        #code = code.decode('utf-8')
        verses = code.split('\n\n') # Splitting text into verses based on empty lines
        logging.info("File successfully read and verses extracted.")
    
    return verses

# Test the function
#verses = read_functions()


functions = read_functions()
@app.route('/')
def index():
    return render_template('index_code.html')
@app.route('/index_code')
def index_code():
    return render_template('index_code.html')

@app.route('/save', methods=['POST'])
def save():
    code = request.form['code']
    logit(f"Received code: {code}")
    suggestions = generate_suggestions(code)
    logit(f"Generated suggestions: {suggestions}")
    return {'suggestions': suggestions}

def generate_suggestions(code):
    logit("Generating suggestions...")
    # Retrieve the last line from the code
    lines = code.split('\n')
    last_line = lines[-1]

    # Split the last line into words and get the last four words
    words = last_line.split()
    last_four_words = ' '.join(words[-2:])
    logit(f"Last four words: {last_four_words}")

    # Search for a matching snippet based on the last four words
    matching_snippets = []
    for i, snippet in enumerate(functions, start=1):
        if last_four_words in snippet:
            # Format the snippet with line numbers and preserve whitespace
            formatted_snippet = f"{i}:: <br/><pre>{snippet.strip()}</pre>"
            matching_snippets.append(formatted_snippet)

    logit(f"Matching snippets: {matching_snippets}")

    return matching_snippets
@app.route('/save_code', methods=['POST'])
def save_code():
    # Extract the code from the request body
    code = request.data.decode('utf-8')

    if code:
        # Append the code to the new_app.py file
        with open('new_app.py', 'a') as file:
            file.write(code + '\n')
        
        return 'Code saved successfully', 200
    else:
        return 'No code provided in the request', 400
    
if __name__ == '__main__':
    app.run(debug=True,port=5100)    
    
==========================================================
 
<!-- templates/index_code.html -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Code Suggestions</title>
    <style>
        html,
        body {
            margin: 0;
            padding: 1%;
            height: 100%;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: black;
            background-image: url('../static/assets/background.png');
            background-repeat: repeat-y;
            background-size: cover;
            /* Use 'cover' to make the image cover the entire body */
            background-position: top;
            color: rgb(61, 195, 12);
        }

        video {
            margin: 10px, auto;
            width: 250px;
            height: auto;
        }

        .wrapper {
            display: flex;
            width: 98%;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 70vh;
            border: 1px solid darkgray;
        }

        .header {
            width: 100%;
            padding: 5px;
            text-align: center;
        }

        .columns {
            display: flex;
            width: 98%;
            margin-top: 10px;
        }

        .column {
            padding: 5px;
            box-sizing: border-box;
        }

        .column.left {
            width: 50%;
            border: 1px solid #3b3232;
        }

        .column.right {
            margin: 0 auto;
            /* Center horizontally */
            width: 50%;
            /* Adjusted width to make space for wrapped text */
            border: 1px solid #3b3232;
            text-align: left;
            font-size: 20px;
            /* Allow text wrapping */
            word-wrap: break-word;
            white-space: pre-wrap;
        }


        .column.right video {
            max-width: 100%;
            height: auto;
        }

        .footer {
            width: 98%;
            padding: 20px;
            background-color: #333;
            color: white;
            text-align: center;
            position: relative;
            /* Make it relative to the container */
            bottom: 0;
            /* Push it to the bottom */
        }
        #code {
            font-size: 18px;
            font-family: monospace;
        }
        .notes {
            margin-top: 10px;
            font-size: 18px;
            color: rgb(105, 178, 230);
        }
        pre {
            white-space: pre-wrap;
        }
    </style>

</head>

<body>
    <div class="wrapper">
        <div class="header">
            <h2>Code Suggestions</h2>
        </div>
        <div class="columns">
            <div class="column left">
<pre class="notes">
Example: Copy and paste this code into the editor.
def create_database(database_name):
    conn = sqlite3.connect(
</pre>
                <a style="font-size: 24px;
                color: antiquewhite;" href="/readlog" target="_blank">readlog</a>
                <form id="codeForm">
                    <label for="code">Enter your code:</label><br>
                    <textarea id="code" name="code" rows="10" cols="55"></textarea><br>
                    <button type="button" onclick="submitForm()">Generate Suggestions</button>
                </form>
            </div>
            <div class="column right">
                <div id="suggestions">
                    <!-- Suggestions will be displayed here -->
                </div>

                <script>
                    function submitForm() {
                        var code = document.getElementById('code').value;
                        var formData = new FormData();
                        formData.append('code', code);

                        fetch('/save', {
                            method: 'POST',
                            body: formData,
                        })
                            .then(response => response.json())
                            .then(data => {
                                displaySuggestions(data.suggestions);
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                            });
                    }

                    function displaySuggestions(suggestions) {
                        var suggestionsDiv = document.getElementById('suggestions');
                        suggestionsDiv.innerHTML = '<h2>Suggestions:</h2>';
                        suggestions.forEach(function (suggestion) {
                            suggestionsDiv.innerHTML += '<p>' + suggestion + '</p>';
                        });
                    }
                </script>
            </div>
        </div>
    </div>
    <footer class="footer">
        <p>Code Suggestions</p>
        <p>Append suggestions to the completion source</p>
        <!-- Footer content with textarea -->
        <textarea id="userCode" placeholder="Your message here" rows="25" cols="120"></textarea>
        <button onclick="saveCode()">Submit</button>
        <script>    function saveCode() {
            var code = document.getElementById('userCode').value;
        
            fetch('/save_code', {
                method: 'POST',
                body: code, // Send the code directly without JSON.stringify
            })
                .then(response => {
                    if (response.ok) {
                        alert('Code saved successfully!');
                    } else {
                        alert('Failed to save code.');
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    alert('Failed to save code.');
                });
        }
        </script>        
    </footer>
    

</body>

</html>

============================================================

<!-- read_log.html -->
<!DOCTYPE html>
<head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title></title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="{{ url_for('static', filename='css/completion_style.css') }}">
    </head>
    <body>
        <!--[if lt IE 7]>
            <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="#">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->
        <style>
            a {
                text-decoration: none;
                color: rgb(210, 242, 0);
                font-size: 26px;
                font-weight: bold;
                padding: 10px;
                            }
            pre{
                margin-top: 50px;
                margin-right:auto;
                margin-left:auto;               
                white-space: pre-wrap;
                font-size: 18px;
                color: rgb(16, 198, 37);
                background-color: rgb(29, 21, 21);
                padding: 10px;
                width: 98%;
            }
            .set_header{
                width: 90%;
                margin-right:auto;
                margin-left:auto;
                justify-content: space-between;
                align-items: center;
                padding: 10px;
                background-color: rgb(153, 8, 8);
                color: white;
            }
            button{
                margin: 5px;
                padding: 10px;
                background-color: rgb(29, 21, 21);
                color: white;
                font-size: 18px;
                border: none;
                cursor: pointer;
                border-radius: 10px;
            }
        </style>
        <script>
            // Function to find and highlight the search string
            function findString(str) {
                if (parseInt(navigator.appVersion) < 4) return;
                
                // Check if find method is supported
                if (window.find) {
                    // Find the search string
                    var strFound = window.find(str);
                    if (!strFound) {
                        // If not found, try to find from the beginning
                        window.find(str, 0, 1);
                    }
                    if (strFound) {
                        // Highlight the found text
                        var range = window.getSelection().getRangeAt(0);
                        var span = document.createElement('span');
                        span.style.backgroundColor = 'yellow';
                        range.surroundContents(span);
                    }
                } else if (navigator.appName.indexOf("Microsoft") != -1) {
                    // Handle Microsoft browsers
                    // Not implemented for brevity
                } else if (navigator.appName == "Opera") {
                    // Handle Opera browsers
                    alert("Opera browsers not supported, sorry...");
                    return;
                }
        
                // If not found, show alert
                if (!strFound) alert("String '" + str + "' not found!");
            }
        
            // Function to move cursor to next occurrence of search input
            function moveToNextOccurrence() {
                var search_str = document.getElementById("search_input").value;
                findString(search_str);
            }
        </script>
        <div class=".main-content">
  <header class="sticky-header set_header" id="header">
    <!-- HOME     -->
    <a href="{{ url_for('index') }}">Home</a>
        <button id="search_submit" onclick="moveToNextOccurrence()">Find Next</button>
        <input type="text" placeholder="Search here..." id="search_input">
  </header> <!--pre>{{content}}</pre--->
    <pre>
  {% for content in log_content %}
    {{content}}
        {% endfor %} 
    </pre>  
        </div>
    </body>
</html>
---------------- static/css/completion_style.css

.sticky-header {
    position: fixed;
    top: 0;
    width: 100%;
    background-color: #b20909; /* You can set your preferred background color */
    padding: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Optional: Add a box shadow for a subtle effect */
}
.wrap-text {
    white-space: pre-wrap; /* This allows the text to wrap at any character */
    word-wrap: break-word; /* This allows long words to be broken and wrap onto the next line */
    overflow-wrap: break-word; /* Alternative property for older browsers */
}
   
        html,
        body {
            margin: 0;
            padding: 1%;
            height: 100%;
            font-family: Arial, sans-serif;
        }

        body {
            background-image: url('../assets/background.png');
            background-repeat: repeat-y;
            background-size: cover;
            /* Use 'cover' to make the image cover the entire body */
            background-position: top;
            color: bisque;
        }

        video {
            margin: 10px, auto;
            width: 250px;
            height: auto;
        }

        .wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;

        }

        .header {
            width: 100%;
            padding: 20px;
            text-align: center;
        }

        .columns {
            display: flex;
            width: 80%;
            margin-top: 20px;
        }

        .column {
            padding: 20px;
            box-sizing: border-box;
        }

        .column.left {
            width: 60%;
            border: 1px solid #000;
            background-color: rgba(000, 255, 155, 0.4);
        }

        .column.right {
            margin: 0 auto;
            /* Center horizontally */
            width: 30%;
            border: 1px solid #000;
            text-align: center;
            /* Center video vertically */
            background-color: rgba(000, 255, 155, 0.4);
        }
        a {
            color: bisque;
            text-decoration: none;
            font-weight: bold;
            font-size: 24px;
        }
        pre {
            color: bisque;
            font-size: 24px;
            font-weight: bold;
            white-space: pre-wrap;
            word-break: break-all;
            
        }




    
    
